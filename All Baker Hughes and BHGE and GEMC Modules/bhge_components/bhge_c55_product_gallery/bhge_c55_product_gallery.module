<?php

/**
 * @file
 * Custom bhge_c55_product_gallery module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;

/**
 * Implements hook_ENTITY_TYPE_view().
 */
function bhge_c55_product_gallery_node_view(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display, $view_mode) {

  if ($view_mode == 'full') {

    if ($display->getComponent('c55_bhge_product_gallery')) {
      $active = $has_page = FALSE;
      $field_active = $entity->get('field_active');
      if ($field_active->first()) {
        $active = $field_active->first()->getValue()['value'];
      }
      $field_has_page = $entity->get('field_has_page');
      if ($field_has_page->first()) {
        $has_page = $field_has_page->first()->getValue()['value'];
      }

      // Dont show component if not active or has no page itself.
      if ($active && $has_page) {
        $nid = $entity->id();
        $filter_nid = $offset = 0;
        $args = \Drupal::request()->query->all();
        if (isset($args['filter']) && is_numeric($args['filter']) && (int) $args['filter'] > 0) {
          $filter_nid = $args['filter'];
        }

        $data = \Drupal::service('bhge_c55_product_gallery.product_gallery_initial')
          ->getInitialData($nid, $filter_nid, $offset, $entity->getTitle());

        if ($data['filter_nid'] && !$data['has_highlights']) {
          $filter_nid = $data['filter_nid'];
        }
        if (isset($args['offset']) && is_numeric($args['offset']) && (int) $args['offset'] >= 0) {
          $offset = $args['offset'];
        }

        // Only display C55 component if initial results.
        if ($data['results']['rows'] || !empty($data['filters']['count'])) {
          // Prepare results build.
          $results_build = [];
          $filters_build = [];

          // Reformat results for the theme.
          $prepared_data = \Drupal::service('bhge_c55_product_gallery.gallery_data_helpers')
            ->prepareData($data['results'], 0, 0);
          $results_build = $prepared_data['data'];

          // Build list of filters.
          foreach ($data['filters']['rows'] as $filter_row) {
            if (is_numeric($filter_row->id)) {
              $filter = 'section_' . $filter_row->id;
            }
            else {
              $filter = $filter_row->id;
            }
            $filters_build[] = [
              'filter' => $filter,
              'title' => $filter_row->title,
            ];
          }

          // Set wrapper classes.
          $classes = 'card-margin toggle-view mobile-carousel quadruple-card load-more';
          if (!empty($data['has_filters'])) {
            $classes .= ' sidebar-filter';
          }

          $node = \Drupal::routeMatch()->getParameter('node');
          $nid = $node->id();

          $initial_filter = '';

          if (!empty(array_values($data['filters']['rows'])) && !empty(array_values($data['filters']['rows'])[0]->id)) {
            $initial_filter = array_values($data['filters']['rows'])[0]->id;
          }
          elseif (!empty($data['initial_type']) && !empty($data['filter_nid'])) {
            $initial_filter = $data['initial_type'] . '_' . $data['filter_nid'];
          }

          // Build total gallery.
          $build['c55_bhge_product_gallery'] = [
            '#theme' => 'c55_bhge_gallery',
            '#class' => $classes,
            '#topics' => $filters_build,
            '#dataset' => $results_build,
            '#initial_filter' => $initial_filter,
            '#apiUrl' => '/api/v1/products-gallery/' . $nid,
            '#title' => 'Products & Services',
            '#limit' => $data['limit'],
            '#offset' => $data['offset'],
            '#total' => $data['results']['total'],
            '#count' => $data['results']['count'],
            '#show_more' => $data['show_more'],
            '#sort_by' => 'created',
            '#cache' => ['contexts' => ['url']],
            '#id' => 'product-gallery',
          ];
        }
      }

      if (isset($build['field_features_and_benefits']['#items'])) {
        unset($build['field_block_standalone_content']);
      }
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 */
function bhge_c55_product_gallery_preprocess_node(&$variables) {
  $node = $variables['node'];

  if ($variables['view_mode'] == 'full' && $node->getType() == 'section') {
    $variables['section_type'] = '';
    if (isset($variables['content']['c55_bhge_product_gallery']['#filter_initial'])) {
      $variables['section_type'] = $variables['content']['c55_bhge_product_gallery']['#filter_initial'];
    }
  }
}

/**
 * Implements hook_entity_extra_field_info().
 */
function bhge_c55_product_gallery_entity_extra_field_info() {
  $extra = [];

  $extra['node']['section']['display']['c55_bhge_product_gallery'] = [
    'label' => t('BHGE Product gallery'),
    'description' => t('Product gallery, contains child products and -product sectionpages.'),
    'weight' => 3,
    'visible' => TRUE,
  ];

  return $extra;
}
